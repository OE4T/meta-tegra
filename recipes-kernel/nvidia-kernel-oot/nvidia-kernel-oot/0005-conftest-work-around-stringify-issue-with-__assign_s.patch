From 8cd4bf9414e5696e977a7bd4a636070e3453a187 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Mon, 11 Nov 2024 08:48:31 -0800
Subject: [PATCH] conftest: work around stringify issue with
 __assign_str_has_no_src_arg test

The kernel trace headers using preprocessor stringification on the
TRACE_INCLUDE_PATH and TRACE_INCLUDE_FILE macros to form the path
name for the header.

gcc pre-defines a macro called linux 'linux' as '1'.

The conftest script uses ${PWD} in its definition of TRACE_INCLUDE_PATH
as part of its __assign_str_has_no_src_arg test. So if your current
working directory happens to have 'linux' in it, as ours typically do
for Yocto builds (e.g., the <machine>-<distro>-linux directory under
tmp/work), the path will get corrupted (e.g., "<machine>-<distro>-1"),
so the test always fails.

This causes OOT builds to fail for kernel 6.10+, since 6.10 introduced
the change to the __assign_str macro that conftest is looking for.

Work around this by un-defining 'linux' in the source for that
particular test.

Upstream-Status: Pending
Signed-off-by: Matt Madison <matt@madison.systems>
---
 nvidia-oot/scripts/conftest/conftest.sh | 1 +
 1 file changed, 1 insertion(+)

diff --git a/nvidia-oot/scripts/conftest/conftest.sh b/nvidia-oot/scripts/conftest/conftest.sh
index 60486c8..1b4e540 100755
--- a/nvidia-oot/scripts/conftest/conftest.sh
+++ b/nvidia-oot/scripts/conftest/conftest.sh
@@ -6454,6 +6454,7 @@ compile_test() {
         __assign_str_has_no_src_arg)
             #
             echo "
+            #undef linux
             #define TRACE_INCLUDE_FILE conftest$$
             #define TRACE_INCLUDE_PATH ${PWD}
 
