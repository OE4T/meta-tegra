L4T_BSP_NAME = "${L4T_SRCS_NAME}"
SRC_URI = "${L4T_URI_BASE}/public_sources.tbz2;downloadfilename=${L4T_BSP_PREFIX}-public_sources-${L4T_VERSION}.tbz2"
<<<<<<<< HEAD:recipes-bsp/tegra-sources/tegra-sources-32.7.2.inc
SRC_SHA256SUM = "5ff4a46c6b85926450c456b0ee2d78f1801aab9c51b3f51b777c7c27ddf517fd"
SRC_SHA256SUM:tegra210 = "4aaccdc4f51c969120ac9bcefe47522d519c7b00fe70a7c2d84bc95c77e56858"
SRC_URI[sha256sum] = "${SRC_SHA256SUM}"
========
SRC_URI[sha256sum] = "fe2d0ce56682c825347a899763c3d38772667c954480f00b6d4d74f276e1eff1"
>>>>>>>> 5ee4f2f5 (tegra-sources: update for R34.1.0):recipes-bsp/tegra-sources/tegra-sources-34.1.0.inc

inherit l4t_bsp

unpack_tar_in_tar() {
    cd ${WORKDIR}
    tar -x -j -f ${SRC_ARCHIVE} ${TEGRA_SRC_SUBARCHIVE} --to-command="tar -x -j --no-same-owner -f- ${TEGRA_SRC_SUBARCHIVE_OPTS}"
    if [ -n "${TEGRA_SRC_EXTRA_SUBARCHIVE}" ]; then
        tar -x -j -f ${SRC_ARCHIVE} ${TEGRA_SRC_EXTRA_SUBARCHIVE} --to-command="tar -x -j --no-same-owner -f- ${TEGRA_SRC_EXTRA_SUBARCHIVE_OPTS}"
    fi
}

python do_unpack() {
    src_uri = (d.getVar('SRC_URI', True) or "").split()
    rootdir = d.getVar('WORKDIR', True)
    p_dir = os.path.join(d.getVar('S', True), 'patches')
    bb.utils.remove(p_dir, True)
    try:
        fetcher = bb.fetch2.Fetch(src_uri, d)
        urldata = fetcher.ud[src_uri[0]]
        urldata.setup_localpath(d)
    except bb.fetch2.BBFetchException as e:
        raise bb.build.FuncFailed(e)

    if urldata.localpath.endswith(".tbz2"):
        d.setVar('SRC_ARCHIVE', urldata.localpath)
        bb.build.exec_func("unpack_tar_in_tar", d)
}

COMPATIBLE_MACHINE = "tegra"
PACKAGE_ARCH = "${L4T_BSP_PKGARCH}"
