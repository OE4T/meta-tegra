From 5f67e64cafbc1875c2427756a097cfe34b1a1220 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Sat, 30 Jan 2021 09:00:13 -0800
Subject: [PATCH] Skip qspi-sd-specific entries for other t210 BUP payloads

With the 32.5.0 version of the script, we now get
errors when the entries specific to the P3448
SKU 0000 don't exist, so just skip them altogether
when building a BUP payload for other targets.
Also adjust the logic for using the qspi-sd-specific
entries so it's based on the board ID and SKU, rather
than hard-coding the target name.

Signed-off-by: Matt Madison <matt@madison.systems>
---
 bootloader/l4t_bup_gen.func | 29 ++++++++++++++++++++---------
 1 file changed, 20 insertions(+), 9 deletions(-)

Index: Linux_for_Tegra/bootloader/l4t_bup_gen.func
===================================================================
--- Linux_for_Tegra.orig/bootloader/l4t_bup_gen.func
+++ Linux_for_Tegra/bootloader/l4t_bup_gen.func
@@ -112,6 +112,9 @@ _generate_bl_update_payload()
 	local fuselevel="${2}"
 	local tegra_soc="${3}"
 	local BUP_GENERATOR="${OUT}"/BUP_generator.py
+	local board=$(echo "${_sw_spec}" | cut -d- -f1)
+	local sku=$(echo "${_sw_spec}" | cut -d- -f3)
+	local machinedev=$(echo "${_sw_spec}" | cut -d- -f7-)
 
 	echo ""
 	echo "Creating update payloads for Jetson-${_sw_spec} board ..."
@@ -149,13 +152,14 @@ _generate_bl_update_payload()
 	)
 
 	# For Jetson Nano QSPI SD, we can use all payloads to update corresponding partitions.
-	local _nano_qspi_sd="jetson-nano-devkit-mmcblk0p1"
-	local partitions_jetson_nano_qspi_sd=(
+	local partitions_jetson_nano_qspi_sd=()
+	if [ "${board}" = "3448" -a "${sku}" = "0000" ]; then
+	    partitions_jetson_nano_qspi_sd=(
 		# These nano_qspi_* payloads only support jetson-nano-qspi-sd tnspec.
-		'part_name=BCT; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/*.bct)'
-		'part_name=RP1; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/${kernel_dtb_base_t21x}*.dtb.${signed_ext})'
-		'part_name=PT;  part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/crc-flash.xml.bin)'
-		'part_name=VER; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/*_bootblob_ver.txt 2> /dev/null || echo "")'
+		'part_name=BCT; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/*.bct)'
+		'part_name=RP1; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/${kernel_dtb_base_t21x}*.dtb.${signed_ext})'
+		'part_name=PT;  part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/crc-flash.xml.bin)'
+		'part_name=VER; part_type=nano_qspi_bl; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/*_bootblob_ver.txt 2> /dev/null || echo "")'
 
 		'part_name=NVC; part_type=nano_qspi_bl; part_spec=${_common_spec};    part_file="${signed_dir}"/nvtboot.bin.${signed_ext}'
 		'part_name=TBC; part_type=nano_qspi_bl; part_spec=${_common_spec};    part_file="${signed_dir}"/nvtboot_cpu.bin.${signed_ext}'
@@ -166,16 +170,17 @@ _generate_bl_update_payload()
 		'part_name=EKS; part_type=nano_qspi_bl; part_spec=${_common_spec};    part_file=eks.img'
 		'part_name=BMP; part_type=nano_qspi_bl; part_spec=${_common_spec};    part_file=bmp.blob'
 
-		'part_name=DTB; part_type=nano_qspi_kernel,nano_qspi_uboot; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/${kernel_dtb_base_t21x}*.dtb.${signed_ext})'
-		'part_name=LNX; part_type=nano_qspi_kernel,nano_qspi_uboot; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${_nano_qspi_sd}*/"${kernel_image_base}".img.${signed_ext})'
+		'part_name=DTB; part_type=nano_qspi_kernel,nano_qspi_uboot; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/${kernel_dtb_base_t21x}*.dtb.${signed_ext})'
+		'part_name=LNX; part_type=nano_qspi_kernel,nano_qspi_uboot; part_spec=${_multi_bin_spec}; part_file=$(ls multi_signed/*${machinedev}*/"${kernel_image_base}".img.${signed_ext})'
 
 		'part_name=RP4; part_type=nano_qspi_bl; part_spec=${_common_spec};    part_file=$(ls rp4.blob 2> /dev/null || echo "")'
-	)
+	    )
+	fi
 
 	local partitions_t210ref=("${partitions_t210ref_common[@]}")
 
 	# Only nano-devkit uses "partitions_jetson_nano_qspi_sd"
-	if [[ "${_sw_spec}" == *"${_nano_qspi_sd}" ]]; then
+	if [ "${board}" = "3448" -a "${sku}" = "0000" ]; then
 		partitions_t210ref+=("${partitions_jetson_nano_qspi_sd[@]}")
 	fi
 
@@ -287,6 +292,12 @@ _generate_bl_update_payload()
 	elif [ "${tegra_soc}" == "t21x" ]; then
 		for part in "${partitions_t210ref[@]}"; do
 			eval "${part}"
+			if [ -z "${part_file}" ]; then
+				if [ "${board}" != "3448" -o "${sku}" != "0000" ]; then
+					echo "Skipping non-existent files for: ${part}"
+					continue
+				fi
+			fi
 			local type_array=(${part_type//,/ })
 
 			for t in "${type_array[@]}"; do
