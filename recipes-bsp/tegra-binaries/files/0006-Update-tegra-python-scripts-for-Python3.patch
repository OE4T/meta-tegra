From 4fc62ffab38763896366fd0e204efb794c3e373a Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ichergui@nvidia.com>
Date: Mon, 11 Aug 2025 17:17:01 +0100
Subject: [PATCH] Update tegra python scripts for Python3

Upstream-Status: Inappropriate [OE specific]

Signed-off-by: Matt Madison <matt@madison.systems>
Signed-off-by: Ilies CHERGUI <ichergui@nvidia.com>
---
 bootloader/tegraflash_impl_t234.py  | 3 ++-
 bootloader/tegraflash_impl_t264.py  | 4 ++--
 bootloader/tegraflash_internal.py   | 7 +++----
 bootloader/tegrasign_v3_internal.py | 1 +
 4 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/bootloader/tegraflash_impl_t234.py b/bootloader/tegraflash_impl_t234.py
index 4693598..d40feab 100644
--- a/bootloader/tegraflash_impl_t234.py
+++ b/bootloader/tegraflash_impl_t234.py
@@ -1,3 +1,4 @@
+#!/usr/bin/env python
 #
 # SPDX-FileCopyrightText: Copyright (c) 2014-2025, NVIDIA Corporation.  All Rights Reserved.
 # SPDX-License-Identifier: LicenseRef-NvidiaProprietary
@@ -3166,7 +3167,7 @@ class TFlashT23x_Base(object):
             binaries.extend([values['--bl']])
 
         if values['--cfg'] is not None :
-            info_print("Copying enc/signed file in " + output_dir)
+            info_print("Copying enc and signed file in " + output_dir)
             signed_files.extend(self.tegraflash_copy_signed_binaries(self.tegrahost_values['--signed_list'], output_dir))
             if self.tegrabct_values['--bct'] is None and not values['--external_device']:
                 raise tegraflash_exception("Unable to find bct file")
diff --git a/bootloader/tegraflash_impl_t264.py b/bootloader/tegraflash_impl_t264.py
index ae64f1b..37546d0 100755
--- a/bootloader/tegraflash_impl_t264.py
+++ b/bootloader/tegraflash_impl_t264.py
@@ -1,3 +1,4 @@
+#!/usr/bin/env python3
 #
 # SPDX-FileCopyrightText: Copyright (c) 2014-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 # SPDX-License-Identifier: LicenseRef-NvidiaProprietary
@@ -3543,7 +3544,6 @@ class TFlashT264_Base(object):
             command = self.exec_file('tegraparser')
             command.extend(['--generategpt', '--pt', self.tegraparser_values['--pt']])
             run_command(command)
-            import re
             patt = re.compile(r".*(mbr|gpt).*\.bin")
             contents = os.listdir('.')
             for f in contents:
@@ -3568,7 +3568,7 @@ class TFlashT264_Base(object):
                 binaries.extend([tags[1]])
 
         if values['--cfg'] is not None :
-            info_print("Copying enc\/signed file in " + output_dir)
+            info_print("Copying enc/signed file in " + output_dir)
             signed_files.extend(self.tegraflash_copy_signed_binaries(self.tegrahost_values['--signed_list'], output_dir))
             self.update_file_name_of_compressed_images()
             if 'br_bct_file_name' in bct_dict:
diff --git a/bootloader/tegraflash_internal.py b/bootloader/tegraflash_internal.py
index 57dce71..5e4e3e0 100755
--- a/bootloader/tegraflash_internal.py
+++ b/bootloader/tegraflash_internal.py
@@ -1,3 +1,4 @@
+#!/usr/bin/env python3
 #
 # SPDX-FileCopyrightText: Copyright (c) 2014-2025, NVIDIA Corporation.  All Rights Reserved.
 # SPDX-License-Identifier: LicenseRef-NvidiaProprietary
@@ -1268,7 +1269,6 @@ def tegraflash_encrypt_and_sign(exports):
         command = exec_file('tegraparser')
         command.extend(['--generategpt', '--pt', tegraparser_values['--pt']])
         run_command(command)
-        import re
         patt = re.compile(r".*(mbr|gpt).*\.bin")
         contents = os.listdir('.')
         for f in contents:
@@ -1388,7 +1388,6 @@ def tegraflash_sign(exports):
             command = exec_file('tegraparser')
             command.extend(['--generategpt', '--pt', tegraparser_values['--pt']])
             run_command(command)
-            import re
             patt = re.compile(r".*(mbr|gpt).*\.bin")
             contents = os.listdir('.')
             for f in contents:
@@ -4042,7 +4041,7 @@ def tegraflash_bpmp_update_valid_entries(ramcode, lines, dtb_start_pos,
     for i in range(0, len(dtb_start_pos)):
         for line_num in range(dtb_start_pos[i], dtb_end_pos[i]):
             if "phandle" in lines[line_num] and not "linux" in lines[line_num]:
-                cur_strap_id = re.search('<(.+?)>', lines[line_num]).group(1)
+                cur_strap_id = re.search(r'<(.+?)>', lines[line_num]).group(1)
                 if cur_strap_id == strap_ids_ph_str[ramcode]:
                     valid_entry.append(True)
                 else:
@@ -4111,7 +4110,7 @@ def tegraflash_bpmp_get_strap_handles(ramcode, test_dts):
             #   emc-strap {
             #       select = <0xa 0x0 0x0 0x0>;
             #   };
-            strap_ids_ph_str = re.search('<(.+?)>', line).group(1)
+            strap_ids_ph_str = re.search(r'<(.+?)>', line).group(1)
             strap_ids_ph_str = strap_ids_ph_str.split(' ')
             break
 
diff --git a/bootloader/tegrasign_v3_internal.py b/bootloader/tegrasign_v3_internal.py
index 26c4c5c..f356517 100755
--- a/bootloader/tegrasign_v3_internal.py
+++ b/bootloader/tegrasign_v3_internal.py
@@ -1,3 +1,4 @@
+#!/usr/bin/env python3
 #
 # SPDX-FileCopyrightText: Copyright (c) 2018-2025, NVIDIA Corporation.  All Rights Reserved.
 # SPDX-License-Identifier: LicenseRef-NvidiaProprietary
