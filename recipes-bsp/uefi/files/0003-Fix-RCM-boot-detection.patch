From 638d5f05d07c1b9007d536234e7e1d3eb91bc9f2 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Sun, 6 Aug 2023 18:48:56 +0100
Subject: [PATCH 2/3] Fix RCM boot detection

PlatformBootOrderLib was identifying any boot device path that
had an NVIDIA-attached option to it as a 'boot.img' (aka RCM boot).
However, such an option gets added to any boot device path that
contains an Android-style image with embedded kernel command
parameters, including one that might be found on a NVMe storage
device that has already been flashed.

This prevents re-flashing via initrd-flash of a Jetson that was
already flashed to boot off an NVMe drive, since the kernel on
the NVMe will take priority over the RCM boot kernel. (This can
be worked around by interrupting UEFI and explicitly choosing
to boot the RCM boot kernel.)

This patch changes the check to use the GUID assigned to the
RCM boot image, which ensures that if the boot priority passed
in the L4TConfiguration DTB overlay is set to 'boot.img' (as
it is for RCM booting), the correct boot option is used.

Logging levels are also increased in this patch, to make it
easier to debug with a regular DEBUG mode build.

Signed-off-by: Matt Madison <matt@madison.systems>
Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
---
 .../PlatformBootOrderLib.c                    | 34 ++++++++-----------
 .../PlatformBootOrderLib.inf                  |  1 +
 2 files changed, 15 insertions(+), 20 deletions(-)

diff --git edk2-tegra.a/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.c edk2-tegra.b/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.c
index eeea6e9..fdd0a10 100644
--- edk2-tegra.a/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.c
+++ edk2-tegra.b/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.c
@@ -275,7 +275,6 @@ GetBootClassOfOption (
   IN EFI_BOOT_MANAGER_LOAD_OPTION  *Option
   )
 {
-  UINTN                       OptionalDataSize;
   UINTN                       BootPriorityIndex;
   EFI_DEVICE_PATH_PROTOCOL    *DevicePathNode;
   UINT8                       ExtraSpecifier;
@@ -301,28 +300,23 @@ GetBootClassOfOption (
     }
   }
 
-  OptionalDataSize = 0;
-  if (Option->OptionalData != NULL) {
-    OptionalDataSize = StrSize ((CONST CHAR16 *)Option->OptionalData);
-  }
-
-  if ((Option->OptionalData != NULL) &&
-      (Option->OptionalDataSize == OptionalDataSize + sizeof (EFI_GUID)) &&
-      CompareGuid (
-        (EFI_GUID *)((UINT8 *)Option->OptionalData + OptionalDataSize),
-        &gNVIDIABmBootOptionGuid
-        ))
-  {
-    for (BootPriorityIndex = 0; BootPriorityIndex < mBootPriorityCount; BootPriorityIndex++) {
-      if (mBootPriorityTable[BootPriorityIndex].ExtraSpecifier == NVIDIA_BOOT_TYPE_BOOTIMG) {
-        Result = &mBootPriorityTable[BootPriorityIndex];
-        goto ReturnResult;
+  DevicePathNode = Option->FilePath;
+  if (!IsDevicePathEndType (DevicePathNode)) {
+    if ((DevicePathType (DevicePathNode) == HARDWARE_DEVICE_PATH) && 
+        (DevicePathSubType (DevicePathNode) == HW_VENDOR_DP)) {
+      VENDOR_DEVICE_PATH *VendorPath = (VENDOR_DEVICE_PATH *)DevicePathNode;
+      if (CompareGuid (&VendorPath->Guid, &gNVIDIARcmKernelGuid)) {
+        for (BootPriorityIndex = 0; BootPriorityIndex < mBootPriorityCount; BootPriorityIndex++) {
+          if (mBootPriorityTable[BootPriorityIndex].ExtraSpecifier == NVIDIA_BOOT_TYPE_BOOTIMG) {
+            Result = &mBootPriorityTable[BootPriorityIndex];
+            goto ReturnResult;
+          }
+        }
       }
     }
   }
 
   ExtraSpecifier = MAX_UINT8;
-  DevicePathNode = Option->FilePath;
   while (!IsDevicePathEndType (DevicePathNode)) {
     if ((DevicePathType (DevicePathNode) == MESSAGING_DEVICE_PATH) &&
         (DevicePathSubType (DevicePathNode) == MSG_URI_DP))
@@ -370,9 +364,9 @@ GetBootClassOfOption (
 
 ReturnResult:
   if (Result != NULL) {
-    DEBUG ((DEBUG_VERBOSE, "Option %d (%s) has class %a\n", Option->OptionNumber, Option->Description, Result->OrderName));
+    DEBUG ((DEBUG_WARN, "Option %d (%s) has class %a\n", Option->OptionNumber, Option->Description, Result->OrderName));
   } else {
-    DEBUG ((DEBUG_VERBOSE, "Option %d (%s) has unknown class\n", Option->OptionNumber, Option->Description));
+    DEBUG ((DEBUG_WARN, "Option %d (%s) has unknown class\n", Option->OptionNumber, Option->Description));
   }
 
   return Result;
diff --git edk2-tegra.a/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.inf edk2-tegra.b/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.inf
index 31ea74a..2251b12 100644
--- edk2-tegra.a/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.inf
+++ edk2-tegra.b/edk2-nvidia/Silicon/NVIDIA/Library/PlatformBootOrderLib/PlatformBootOrderLib.inf
@@ -46,3 +46,4 @@
   gNVIDIATokenSpaceGuid
   gNVIDIABmBootOptionGuid
   gEfiEventReadyToBootGuid
+  gNVIDIARcmKernelGuid
-- 
2.25.1

