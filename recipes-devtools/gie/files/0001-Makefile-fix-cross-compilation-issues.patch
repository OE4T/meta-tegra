From 4642ba03e09dec387243d5f423d70ec0c8ea23b1 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Thu, 24 Feb 2022 01:53:30 +0000
Subject: [PATCH] Makefile: fix cross compilation issues

Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
---
 Makefile.config | 29 +++++++++++++++++++----------
 1 file changed, 19 insertions(+), 10 deletions(-)

Index: samples/Makefile.config
===================================================================
--- samples.orig/Makefile.config
+++ samples/Makefile.config
@@ -6,6 +6,7 @@ PROTOBUF_TRIPLE ?= x86_64-linux-gnu
 SAFE_PDK ?= 0
 CPP_STANDARD ?= 14
 TARGET ?= $(shell uname -m)
+BUILD_TYPE ?= release
 CUSTOM_LD_FLAGS ?=
 
 ifeq ($(CUDA_INSTALL_DIR), )
@@ -47,11 +48,11 @@ CUDNN_LIBDIR = lib64
 ifeq ($(TARGET), aarch64)
   ifeq ($(shell uname -m), aarch64)
     CUDA_LIBDIR = lib64
-    CC = g++
+    CXX ?= g++
   else
-    CC = aarch64-linux-gnu-g++
+    CXX ?= aarch64-linux-gnu-g++
   endif
-  CUCC = $(CUDA_INSTALL_DIR)/bin/nvcc -m64 -ccbin $(CC)
+  CUCC = $(CUDA_INSTALL_DIR)/bin/nvcc -m64 -ccbin $(CXX)
 else ifeq ($(TARGET), x86_64)
   CUDA_LIBDIR = lib64
   CC = g++
@@ -75,7 +76,7 @@ else ########
   $(error Auto-detection of platform failed. Please specify one of the following arguments to make: TARGET=[aarch64|x86_64|qnx])
 endif
 
-CC_MAJOR_VER = $(shell $(CC) -dumpversion | sed -e "s/\..*//")
+CC_MAJOR_VER = $(shell $(CXX) -dumpversion | sed -e "s/\..*//")
 ifeq ($(CC_MAJOR_VER), 4)
   CPP_STANDARD := 11
 endif
@@ -132,7 +133,7 @@ endef
 ifneq ($(USE_QCC), 1)
 # Usage: $(call make-depend,source-file,object-file,depend-file)
 define make-depend
-  $(AT)$(CC) -MM -MF $3 -MP -MT $2 $(COMMON_FLAGS) $1
+  $(AT)$(CXX) -MM -MF $3 -MP -MT $2 $(COMMON_FLAGS) $1
 endef
 # Usage: $(call make-cuda-depend,source-file,object-file,depend-file,flags)
 define make-cuda-depend
@@ -328,7 +329,15 @@ CFLAGSD = $(COMMON_FLAGS) -g
 LFLAGS = $(COMMON_LD_FLAGS)
 LFLAGSD = $(COMMON_LD_FLAGS)
 
-all: debug release
+ifeq ($(BUILD_TYPE), release)
+  all: release
+else
+ifeq ($(BUILD_TYPE), debug)
+  all: debug
+else
+  all: debug release
+endif
+endif
 
 release: $(OUTDIR)/$(OUTNAME_RELEASE)
 debug: $(OUTDIR)/$(OUTNAME_DEBUG)
@@ -343,25 +352,25 @@ test_release:
 
 $(OUTDIR)/$(OUTNAME_RELEASE): $(OBJS) $(CUOBJS)
 	$(ECHO) Linking: $@
-	$(AT)$(CC) -o $@ $(LFLAGS) -Wl,--start-group $(LIBS) $^ -Wl,--end-group
+	$(AT)$(CXX) -o $@ $(LFLAGS) -Wl,--start-group $(LIBS) $^ -Wl,--end-group
 
 $(OUTDIR)/$(OUTNAME_DEBUG): $(DOBJS) $(CUDOBJS)
 	$(ECHO) Linking: $@
-	$(AT)$(CC) -o $@ $(LFLAGSD) -Wl,--start-group $(DLIBS) $^ -Wl,--end-group
+	$(AT)$(CXX) -o $@ $(LFLAGSD) -Wl,--start-group $(DLIBS) $^ -Wl,--end-group
 
 $(OBJDIR)/%.o: %.cpp
 	$(AT)if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
 	$(foreach XDIR, $(EXTRA_DIRECTORIES), if [ ! -d $(OBJDIR)/$(XDIR) ]; then mkdir -p $(OBJDIR)/$(XDIR); fi &&) :
 	$(call make-depend,$<,$@,$(subst .o,.d,$@))
 	$(ECHO) Compiling: $<
-	$(AT)$(CC) $(CFLAGS) -c -o $@ $<
+	$(AT)$(CXX) $(CFLAGS) -c -o $@ $<
 
 $(DOBJDIR)/%.o: %.cpp
 	$(AT)if [ ! -d $(DOBJDIR) ]; then mkdir -p $(DOBJDIR); fi
 	$(foreach XDIR, $(EXTRA_DIRECTORIES), if [ ! -d $(OBJDIR)/$(XDIR) ]; then mkdir -p $(DOBJDIR)/$(XDIR); fi &&) :
 	$(call make-depend,$<,$@,$(subst .o,.d,$@))
 	$(ECHO) Compiling: $<
-	$(AT)$(CC) $(CFLAGSD) -c -o $@ $<
+	$(AT)$(CXX) $(CFLAGSD) -c -o $@ $<
 
 ######################################################################### CU
 $(OBJDIR)/%.o: %.cu
