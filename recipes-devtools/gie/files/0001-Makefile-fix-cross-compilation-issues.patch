From 7ed6b3bae14ede51f376c648e4a20ddaf3998334 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ichergui@nvidia.com>
Date: Sat, 11 Nov 2023 20:25:34 +0000
Subject: [PATCH] Makefile: fix cross compilation issues

Signed-off-by: Ilies CHERGUI <ichergui@nvidia.com>
---
 Makefile.config | 29 +++++++++++++++++++----------
 1 file changed, 19 insertions(+), 10 deletions(-)

diff --git a/Makefile.config b/Makefile.config
index d8e5d00..ceefcde 100644
--- a/Makefile.config
+++ b/Makefile.config
@@ -9,6 +9,7 @@ TARGET ?= $(shell uname -m)
 CUSTOM_LD_FLAGS ?=
 USE_STUB_EXTERNALS ?= 0
 TRT_STATIC ?= 0
+BUILD_TYPE ?= release
 
 ifeq ($(CUDA_INSTALL_DIR), )
   CUDA_INSTALL_DIR ?= /usr/local/cuda
@@ -50,11 +51,11 @@ CUDNN_LIBDIR ?= $(CUDNN_INSTALL_DIR)/lib64
 ifeq ($(TARGET), aarch64)
   ifeq ($(shell uname -m), aarch64)
     CUDA_LIBDIR = lib64
-    CC = g++
+    CXX ?= g++
   else
-    CC = aarch64-linux-gnu-g++
+    CXX ?= aarch64-linux-gnu-g++
   endif
-  CUCC = $(CUDA_INSTALL_DIR)/bin/nvcc -m64 -ccbin $(CC)
+  CUCC = $(CUDA_INSTALL_DIR)/bin/nvcc -m64 -ccbin $(CXX)
 else ifeq ($(TARGET), x86_64)
   CUDA_LIBDIR = lib64
   CC = g++
@@ -78,7 +79,7 @@ else ########
   $(error Auto-detection of platform failed. Please specify one of the following arguments to make: TARGET=[aarch64|x86_64|qnx])
 endif
 
-CC_MAJOR_VER = $(shell $(CC) -dumpversion | sed -e "s/\..*//")
+CC_MAJOR_VER = $(shell $(CXX) -dumpversion | sed -e "s/\..*//")
 ifeq ($(CC_MAJOR_VER), 4)
   CPP_STANDARD := 11
 endif
@@ -135,7 +136,7 @@ endef
 ifneq ($(USE_QCC), 1)
 # Usage: $(call make-depend,source-file,object-file,depend-file)
 define make-depend
-  $(AT)$(CC) -MM -MF $3 -MP -MT $2 $(COMMON_FLAGS) $1
+  $(AT)$(CXX) -MM -MF $3 -MP -MT $2 $(COMMON_FLAGS) $1
 endef
 # Usage: $(call make-cuda-depend,source-file,object-file,depend-file,flags)
 define make-cuda-depend
@@ -341,7 +342,15 @@ CFLAGSD = $(COMMON_FLAGS) -g
 LFLAGS = $(COMMON_LD_FLAGS)
 LFLAGSD = $(COMMON_LD_FLAGS)
 
-all: debug release
+ifeq ($(BUILD_TYPE), release)
+  all: release
+else
+ifeq ($(BUILD_TYPE), debug)
+  all: debug
+else
+  all: debug release
+endif
+endif
 
 release: $(OUTDIR)/$(OUTNAME_RELEASE)
 debug: $(OUTDIR)/$(OUTNAME_DEBUG)
@@ -356,25 +365,25 @@ test_release:
 
 $(OUTDIR)/$(OUTNAME_RELEASE): $(OBJS) $(CUOBJS)
 	$(ECHO) Linking: $@
-	$(AT)$(CC) -o $@ $(LFLAGS) -Wl,--start-group $(LIBS) $^ -Wl,--end-group
+	$(AT)$(CXX) -o $@ $(LFLAGS) -Wl,--start-group $(LIBS) $^ -Wl,--end-group
 
 $(OUTDIR)/$(OUTNAME_DEBUG): $(DOBJS) $(CUDOBJS)
 	$(ECHO) Linking: $@
-	$(AT)$(CC) -o $@ $(LFLAGSD) -Wl,--start-group $(DLIBS) $^ -Wl,--end-group
+	$(AT)$(CXX) -o $@ $(LFLAGSD) -Wl,--start-group $(DLIBS) $^ -Wl,--end-group
 
 $(OBJDIR)/%.o: %.cpp
 	$(AT)if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
 	$(foreach XDIR, $(EXTRA_DIRECTORIES), if [ ! -d $(OBJDIR)/$(XDIR) ]; then mkdir -p $(OBJDIR)/$(XDIR); fi &&) :
 	$(call make-depend,$<,$@,$(subst .o,.d,$@))
 	$(ECHO) Compiling: $<
-	$(AT)$(CC) $(CFLAGS) -c -o $@ $<
+	$(AT)$(CXX) $(CFLAGS) -c -o $@ $<
 
 $(DOBJDIR)/%.o: %.cpp
 	$(AT)if [ ! -d $(DOBJDIR) ]; then mkdir -p $(DOBJDIR); fi
 	$(foreach XDIR, $(EXTRA_DIRECTORIES), if [ ! -d $(OBJDIR)/$(XDIR) ]; then mkdir -p $(DOBJDIR)/$(XDIR); fi &&) :
 	$(call make-depend,$<,$@,$(subst .o,.d,$@))
 	$(ECHO) Compiling: $<
-	$(AT)$(CC) $(CFLAGSD) -c -o $@ $<
+	$(AT)$(CXX) $(CFLAGSD) -c -o $@ $<
 
 ######################################################################### CU
 $(OBJDIR)/%.o: %.cu
-- 
2.25.1

