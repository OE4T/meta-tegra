From 00c7a7fdd4b4aad9e57d8b541de17ad209b6cd06 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Fri, 29 Mar 2013 09:28:10 +0400
Subject: [PATCH 14/40] Disable sdt.

We don't list dtrace in DEPENDS so we shouldn't be depending on this header.
It may or may not exist from preivous builds though. To be determinstic, disable
sdt.h usage always. This avoids build failures if the header is removed after configure
but before libgcc is compiled for example.

RP 2012/8/7

Signed-off-by: Khem Raj <raj.khem@gmail.com>

Disable sdt for libstdc++-v3.

Signed-off-by: Robert Yang <liezhi.yang@windriver.com>

Upstream-Status: Inappropriate [hack]
---
 gcc/configure             | 12 ++++++------
 gcc/configure.ac          | 18 +++++++++---------
 libstdc++-v3/configure    |  6 +++---
 libstdc++-v3/configure.ac |  2 +-
 4 files changed, 19 insertions(+), 19 deletions(-)

Index: gcc-8.5.0/gcc/configure
===================================================================
--- gcc-8.5.0.orig/gcc/configure
+++ gcc-8.5.0/gcc/configure
@@ -29346,12 +29346,12 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking sys/sdt.h in the target C library" >&5
 $as_echo_n "checking sys/sdt.h in the target C library... " >&6; }
 have_sys_sdt_h=no
-if test -f $target_header_dir/sys/sdt.h; then
-  have_sys_sdt_h=yes
-
-$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
-
-fi
+#if test -f $target_header_dir/sys/sdt.h; then
+#  have_sys_sdt_h=yes
+#
+#$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
+#
+#fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $have_sys_sdt_h" >&5
 $as_echo "$have_sys_sdt_h" >&6; }
 
Index: gcc-8.5.0/gcc/configure.ac
===================================================================
--- gcc-8.5.0.orig/gcc/configure.ac
+++ gcc-8.5.0/gcc/configure.ac
@@ -5950,15 +5950,15 @@ fi
 AC_SUBST([enable_default_ssp])
 
 # Test for <sys/sdt.h> on the target.
-GCC_TARGET_TEMPLATE([HAVE_SYS_SDT_H])
-AC_MSG_CHECKING(sys/sdt.h in the target C library)
-have_sys_sdt_h=no
-if test -f $target_header_dir/sys/sdt.h; then
-  have_sys_sdt_h=yes
-  AC_DEFINE(HAVE_SYS_SDT_H, 1,
-            [Define if your target C library provides sys/sdt.h])
-fi
-AC_MSG_RESULT($have_sys_sdt_h)
+#GCC_TARGET_TEMPLATE([HAVE_SYS_SDT_H])
+#AC_MSG_CHECKING(sys/sdt.h in the target C library)
+#have_sys_sdt_h=no
+#if test -f $target_header_dir/sys/sdt.h; then
+#  have_sys_sdt_h=yes
+#  AC_DEFINE(HAVE_SYS_SDT_H, 1,
+#            [Define if your target C library provides sys/sdt.h])
+#fi
+#AC_MSG_RESULT($have_sys_sdt_h)
 
 # Check if TFmode long double should be used by default or not.
 # Some glibc targets used DFmode long double, but with glibc 2.4
Index: gcc-8.5.0/libstdc++-v3/configure
===================================================================
--- gcc-8.5.0.orig/libstdc++-v3/configure
+++ gcc-8.5.0/libstdc++-v3/configure
@@ -22025,11 +22025,11 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS con
 ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
 ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
-  if test $glibcxx_cv_sys_sdt_h = yes; then
+#  if test $glibcxx_cv_sys_sdt_h = yes; then
 
-$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
+#$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
 
-  fi
+#  fi
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_sys_sdt_h" >&5
 $as_echo "$glibcxx_cv_sys_sdt_h" >&6; }
 
Index: gcc-8.5.0/libstdc++-v3/configure.ac
===================================================================
--- gcc-8.5.0.orig/libstdc++-v3/configure.ac
+++ gcc-8.5.0/libstdc++-v3/configure.ac
@@ -232,7 +232,7 @@ GLIBCXX_CHECK_SC_NPROCESSORS_ONLN
 GLIBCXX_CHECK_SC_NPROC_ONLN
 GLIBCXX_CHECK_PTHREADS_NUM_PROCESSORS_NP
 GLIBCXX_CHECK_SYSCTL_HW_NCPU
-GLIBCXX_CHECK_SDT_H
+#GLIBCXX_CHECK_SDT_H
 
 # Check for available headers.
 AC_CHECK_HEADERS([endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \
