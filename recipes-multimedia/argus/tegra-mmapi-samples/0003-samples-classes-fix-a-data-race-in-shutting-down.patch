From c4f70f1cc329154128e3f0f325484f9916caa391 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Wed, 30 Mar 2022 22:04:38 +0100
Subject: [PATCH 3/9] samples: classes: fix a data race in shutting down
 dequeue thread

as well as a couple of other uses of pthread_join with
a possibly null (and thus invalid) thread id.

Signed-off-by: Matt Madison <matt@madison.systems>
---
 .../common/classes/NvApplicationProfiler.cpp      |  5 +++-
 samples/common/classes/NvEglRenderer.cpp          |  6 ++++-
 samples/common/classes/NvV4l2ElementPlane.cpp     | 23 +++++++++++++++----
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/samples/common/classes/NvApplicationProfiler.cpp b/samples/common/classes/NvApplicationProfiler.cpp
index f37a31b..4458845 100644
--- a/samples/common/classes/NvApplicationProfiler.cpp
+++ b/samples/common/classes/NvApplicationProfiler.cpp
@@ -126,7 +126,10 @@ void
 NvApplicationProfiler::stop()
 {
     running = false;
-    pthread_join(profiling_thread, NULL);
+    if (profiling_thread)
+    {
+        pthread_join(profiling_thread, NULL);
+    }
 
     pthread_mutex_lock(&thread_lock);
     gettimeofday(&data.stop_time, NULL);
diff --git a/samples/common/classes/NvEglRenderer.cpp b/samples/common/classes/NvEglRenderer.cpp
index e8bd71b..f8f6abe 100644
--- a/samples/common/classes/NvEglRenderer.cpp
+++ b/samples/common/classes/NvEglRenderer.cpp
@@ -144,6 +144,7 @@ NvEglRenderer::NvEglRenderer(const char *name, uint32_t width, uint32_t height,
     if(isInError())
     {
         pthread_join(render_thread, NULL);
+        render_thread = 0;
         goto error;
     }
 
@@ -330,7 +331,10 @@ NvEglRenderer::~NvEglRenderer()
     pthread_cond_broadcast(&render_cond);
     pthread_mutex_unlock(&render_lock);
 
-    pthread_join(render_thread, NULL);
+    if (render_thread)
+    {
+        pthread_join(render_thread, NULL);
+    }
 
     pthread_mutex_destroy(&render_lock);
     pthread_cond_destroy(&render_cond);
diff --git a/samples/common/classes/NvV4l2ElementPlane.cpp b/samples/common/classes/NvV4l2ElementPlane.cpp
index bb67a5d..c755923 100644
--- a/samples/common/classes/NvV4l2ElementPlane.cpp
+++ b/samples/common/classes/NvV4l2ElementPlane.cpp
@@ -887,10 +887,18 @@ NvV4l2ElementPlane::stopDQThread()
         PLANE_WARN_MSG("Should not be called in blocking mode");
         return 0;
     }
-    stop_dqthread = true;
-    pthread_join(dq_thread, NULL);
-    dq_thread = 0;
-    PLANE_DEBUG_MSG("Stopped DQ Thread");
+    pthread_mutex_lock(&plane_lock);
+    if (dqthread_running && dq_thread != 0)
+    {
+        stop_dqthread = true;
+        pthread_mutex_unlock(&plane_lock);
+        pthread_join(dq_thread, NULL);
+        dq_thread = 0;
+        PLANE_DEBUG_MSG("Stopped DQ Thread");
+    } else
+    {
+        PLANE_DEBUG_MSG("DQ Thread already stopped");
+    }
     return 0;
 }
 
@@ -910,6 +918,13 @@ NvV4l2ElementPlane::waitForDQThread(uint32_t max_wait_ms)
     timeToWait.tv_nsec = timeToWait.tv_nsec % 1000000000L;
 
     pthread_mutex_lock(&plane_lock);
+    if (!dq_thread)
+    {
+        pthread_mutex_unlock(&plane_lock);
+        PLANE_DEBUG_MSG("No waiting for already-stopped DQ Thread");
+        return return_val;
+    }
+
     while (dqthread_running)
     {
         ret = pthread_cond_timedwait(&plane_cond, &plane_lock, &timeToWait);
-- 
2.32.0

