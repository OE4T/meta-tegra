Index: gst-nvarguscamera/gstnvarguscamerasrc.cpp
===================================================================
--- gst-nvarguscamera.orig/gstnvarguscamerasrc.cpp
+++ gst-nvarguscamera/gstnvarguscamerasrc.cpp
@@ -393,7 +393,7 @@ bool StreamConsumer::threadExecute(GstNv
       src->argus_in_error = TRUE;
       const IEventError* iEventError = interface_cast<const IEventError>(event);
       Argus::Status argusStatus = iEventError->getStatus();
-      error = g_error_new (domain, argusStatus, getStatusString(argusStatus));
+      error = g_error_new (domain, argusStatus, "%s", getStatusString(argusStatus));
       GstMessage *message = gst_message_new_error (GST_OBJECT(src), error, "Argus Error Status");
       gst_element_post_message (GST_ELEMENT_CAST(src), message);
       g_mutex_lock (&src->argus_buffers_queue_lock);
@@ -413,7 +413,7 @@ bool StreamConsumer::threadExecute(GstNv
       if (frame_status != STATUS_OK)
       {
         src->argus_in_error = TRUE;
-        error = g_error_new (domain, frame_status, getStatusString(frame_status));
+        error = g_error_new (domain, frame_status, "%s", getStatusString(frame_status));
         GstMessage *message = gst_message_new_error (GST_OBJECT(src), error, "Argus Error Status");
         gst_element_post_message (GST_ELEMENT_CAST(src), message);
         g_mutex_lock (&src->argus_buffers_queue_lock);
