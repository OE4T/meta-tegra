From 7fc784330ea97de451dc34cd712694f639b47574 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Mon, 17 May 2021 13:08:44 -0700
Subject: [PATCH] pyOnnx fixups for TensorRT 7.1 API

Signed-off-by: Matt Madison <matt@madison.systems>
---
 python/src/parsers/pyOnnx.cpp | 15 ++-------------
 1 file changed, 2 insertions(+), 13 deletions(-)

diff --git a/python/src/parsers/pyOnnx.cpp b/python/src/parsers/pyOnnx.cpp
index ea99ee4..f3e7db4 100644
--- a/python/src/parsers/pyOnnx.cpp
+++ b/python/src/parsers/pyOnnx.cpp
@@ -57,27 +57,17 @@ namespace lambdas
     // For ONNX Parser
     static const auto parse = [](IParser& self, const py::buffer& model, const char* path = nullptr) {
         py::buffer_info info = model.request();
-        return self.parse(info.ptr, info.size * info.itemsize, path);
+        return self.parse(info.ptr, info.size * info.itemsize);
     };
 
     static const auto parseFromFile
         = [](IParser& self, const std::string& model) { return self.parseFromFile(model.c_str(), 0);
     };
 
-    static const auto getRefitMap = [] (IParser& self)
-    {
-        int size = self.getRefitMap(nullptr, nullptr, nullptr);
-        std::vector<const char*> weightNames(size);
-        std::vector<const char*> layerNames(size);
-        std::vector<nvinfer1::WeightsRole> roles(size);
-        self.getRefitMap(weightNames.data(), layerNames.data(), roles.data());
-        return std::tuple<std::vector<const char*>, std::vector<const char*>, std::vector<nvinfer1::WeightsRole>>{weightNames, layerNames, roles};
-    };
-
     static const auto supportsModel = [](IParser& self, const py::buffer& model, const char* path = nullptr) {
         py::buffer_info info = model.request();
         SubGraphCollection_t subgraphs;
-        const bool supported = self.supportsModel(info.ptr, info.size * info.itemsize, subgraphs, path);
+        const bool supported = self.supportsModel(info.ptr, info.size * info.itemsize, subgraphs);
         return std::make_pair(supported, subgraphs);
     };
 } // namespace lambdas
@@ -99,7 +89,6 @@ namespace lambdas
             .def_property_readonly("num_errors", &IParser::getNbErrors)
             .def("get_error", &IParser::getError, "index"_a, OnnxParserDoc::get_error)
             .def("clear_errors", &IParser::clearErrors, OnnxParserDoc::clear_errors)
-            .def("get_refit_map", lambdas::getRefitMap, OnnxParserDoc::get_refit_map)
             .def("__del__", &IParser::destroy);
 
         py::enum_<ErrorCode>(m, "ErrorCode", ErrorCodeDoc::descr)
