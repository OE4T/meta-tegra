From 56ef33321c4ac6c8b09d34710a85efd9f5fb4087 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Sun, 8 Aug 2021 21:18:48 +0100
Subject: [PATCH] OE cross-build fixups

Upstream-Status: Inappropriate [OE-specific]

Signed-off-by: Pablo Rodriguez Quesada <pablo.rodriguez-quesada@windriver.com>
Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
Signed-off-by: Matt Madison <matt@madison.systems>
---
 Makefile              | 38 ++++++++++++++++++++------------------
 mk/common.mk          |  2 +-
 mk/nvidia-modprobe.mk |  3 ++-
 3 files changed, 23 insertions(+), 20 deletions(-)

Index: git/Makefile
===================================================================
--- git.orig/Makefile
+++ git/Makefile
@@ -24,17 +24,17 @@ WITH_SECCOMP ?= yes
 
 ##### Global definitions #####
 
-export prefix      = /usr/local
-export exec_prefix = $(prefix)
-export bindir      = $(exec_prefix)/bin
-export libdir      = $(exec_prefix)/lib
-export docdir      = $(prefix)/share/doc
-export libdbgdir   = $(prefix)/lib/debug$(libdir)
-export includedir  = $(prefix)/include
-export pkgconfdir  = $(libdir)/pkgconfig
+export prefix      ?= /usr/local
+export exec_prefix ?= $(prefix)
+export bindir      ?= $(exec_prefix)/bin
+export libdir      ?= $(exec_prefix)/lib
+export docdir      ?= $(prefix)/share/doc
+export libdbgdir   ?= $(prefix)/lib/debug$(libdir)
+export includedir  ?= $(prefix)/include
+export pkgconfdir  ?= $(libdir)/pkgconfig
 
 export PKG_DIR     ?= $(CURDIR)/pkg
-export SRCS_DIR    ?= $(CURDIR)/src
+export SRCS_DIR    ?= src
 export DEPS_DIR    ?= $(CURDIR)/deps
 export DIST_DIR    ?= $(CURDIR)/dist
 export MAKE_DIR    ?= $(CURDIR)/mk
@@ -140,20 +140,22 @@ LIBGO_SYMLINK := $(LIBGO_NAME).so
 
 # Common flags
 CPPFLAGS := -D_GNU_SOURCE -D_FORTIFY_SOURCE=2 $(CPPFLAGS)
+CCNAME := $(shell $(CC) -v 2>&1 | grep -q "clang version" && echo clang || echo gcc)
 CFLAGS   := -std=gnu11 -O2 -g -fdata-sections -ffunction-sections -fplan9-extensions -fstack-protector -fno-strict-aliasing -fvisibility=hidden \
             -Wall -Wextra -Wcast-align -Wpointer-arith -Wmissing-prototypes -Wnonnull \
             -Wwrite-strings -Wlogical-op -Wformat=2 -Wmissing-format-attribute -Winit-self -Wshadow \
             -Wstrict-prototypes -Wunreachable-code -Wconversion -Wsign-conversion \
-            -Wno-unknown-warning-option -Wno-format-extra-args -Wno-gnu-alignof-expression $(CFLAGS)
+            -Wno-format-extra-args $(if $(filter clang,$(CCNAME)),-Wno-unknown-warning-option -Wno-gnu-alignof-expression,) \
+            -I=/usr/include/tirpc $(CFLAGS)
 LDFLAGS  := -Wl,-zrelro -Wl,-znow -Wl,-zdefs -Wl,--gc-sections $(LDFLAGS)
 LDLIBS   := $(LDLIBS)
 
 # Library flags (recursively expanded to handle target-specific flags)
 LIB_CPPFLAGS       = -DNV_LINUX -isystem $(DEPS_DIR)$(includedir) -include $(BUILD_DEFS)
 LIB_CFLAGS         = -fPIC
-LIB_LDFLAGS        = -L$(DEPS_DIR)$(libdir) -shared -Wl,-soname=$(LIB_SONAME)
-LIB_LDLIBS_STATIC  = -l:libnvidia-modprobe-utils.a
-LIB_LDLIBS_SHARED  = -ldl -lcap
+LIB_LDFLAGS        = -shared -Wl,-soname=$(LIB_SONAME)
+LIB_LDLIBS_STATIC  = -L$(DEPS_DIR)$(libdir) -l:libnvidia-modprobe-utils.a
+LIB_LDLIBS_SHARED  = -ltirpc -ldl -lcap -lpthread
 ifeq ($(WITH_NVCGO), yes)
 LIB_CPPFLAGS       += -DWITH_NVCGO
 LIB_LDLIBS_SHARED  += -lpthread
@@ -205,13 +207,17 @@ DEPENDENCIES   := $(BIN_OBJS:%.o=%.d) $(
 $(BUILD_DEFS):
 	@printf '#define BUILD_DATE     "%s"\n' '$(strip $(DATE))' >$(BUILD_DEFS)
 	@printf '#define BUILD_COMPILER "%s " __VERSION__\n' '$(notdir $(COMPILER))' >>$(BUILD_DEFS)
+ifeq ($(EXCLUDE_BUILD_FLAGS),)
 	@printf '#define BUILD_FLAGS    "%s"\n' '$(strip $(CPPFLAGS) $(CFLAGS) $(LDFLAGS))' >>$(BUILD_DEFS)
+else
+	@printf '#define BUILD_FLAGS    ""\n' >>$(BUILD_DEFS)
+endif
 	@printf '#define BUILD_REVISION "%s"\n' '$(strip $(REVISION))' >>$(BUILD_DEFS)
 	@printf '#define BUILD_PLATFORM "%s"\n' '$(strip $(PLATFORM))' >>$(BUILD_DEFS)
 
 $(LIB_RPC_SRCS): $(LIB_RPC_SPEC)
 	$(RM) $@
-	cd $(dir $@) && $(RPCGEN) $(RPCGENFLAGS) -C -M -N -o $(notdir $@) $(LIB_RPC_SPEC)
+	cd $(dir $@) && $(RPCGEN) $(RPCGENFLAGS) -C -M -N -o $(notdir $@) $(notdir $(LIB_RPC_SPEC))
 
 $(LIB_OBJS): %.lo: %.c | deps
 	$(CC) $(LIB_CFLAGS) $(LIB_CPPFLAGS) -MMD -MF $*.d -c $(OUTPUT_OPTION) $<
@@ -227,17 +233,14 @@ $(LIB_SHARED): $(LIB_OBJS)
 	$(OBJCPY) --only-keep-debug $@ $(LIB_SONAME)
 	$(OBJCPY) --add-gnu-debuglink=$(LIB_SONAME) $@
 	$(MV) $(LIB_SONAME) $(DEBUG_DIR)
-	$(STRIP) --strip-unneeded -R .comment $@
 
 $(LIB_STATIC_OBJ): $(LIB_OBJS)
 	# FIXME Handle user-defined LDFLAGS and LDLIBS
 	$(LD) -d -r --exclude-libs ALL -L$(DEPS_DIR)$(libdir) $(OUTPUT_OPTION) $^ $(LIB_LDLIBS_STATIC)
 	$(OBJCPY) --localize-hidden $@
-	$(STRIP) --strip-unneeded -R .comment $@
 
 $(BIN_NAME): $(BIN_OBJS)
 	$(CC) $(BIN_CFLAGS) $(BIN_CPPFLAGS) $(BIN_LDFLAGS) $(OUTPUT_OPTION) $^ $(BIN_SCRIPT) $(BIN_LDLIBS)
-	$(STRIP) --strip-unneeded -R .comment $@
 
 ##### Public rules #####
 
@@ -247,7 +250,6 @@ all: shared static tools
 # Run with ASAN_OPTIONS="protect_shadow_gap=0" to avoid CUDA OOM errors
 debug: CFLAGS += -pedantic -fsanitize=undefined -fno-omit-frame-pointer -fno-common -fsanitize=address
 debug: LDLIBS += -lubsan
-debug: STRIP  := @echo skipping: strip
 debug: shared static tools
 
 tools: $(BIN_NAME)
@@ -269,7 +271,7 @@ ifeq ($(WITH_TIRPC), yes)
 	$(MAKE) -f $(MAKE_DIR)/libtirpc.mk DESTDIR=$(DEPS_DIR) install
 endif
 
-install: all
+install:
 	$(INSTALL) -d -m 755 $(addprefix $(DESTDIR),$(includedir) $(bindir) $(libdir) $(docdir) $(libdbgdir) $(pkgconfdir))
 	# Install header files
 	$(INSTALL) -m 644 $(LIB_INCS) $(DESTDIR)$(includedir)
Index: git/mk/common.mk
===================================================================
--- git.orig/mk/common.mk
+++ git/mk/common.mk
@@ -28,7 +28,7 @@ else
     DATE := $(shell date -u --iso-8601=minutes)
 endif
 REVISION ?= $(shell git rev-parse HEAD)
-COMPILER := $(realpath $(shell which $(CC)))
+COMPILER := $(realpath $(shell which $(firstword $(CC))))
 PLATFORM ?= $(shell uname -m)
 
 ifeq ($(DATE),)
Index: git/mk/nvidia-modprobe.mk
===================================================================
--- git.orig/mk/nvidia-modprobe.mk
+++ git/mk/nvidia-modprobe.mk
@@ -26,6 +26,7 @@ PATCH_FILE     := $(MAKE_DIR)/nvidia-mod
 ARFLAGS  := -rU
 CPPFLAGS := -D_FORTIFY_SOURCE=2 -DNV_LINUX
 CFLAGS   := -O2 -g -fdata-sections -ffunction-sections -fstack-protector -fno-strict-aliasing -fPIC
+CFLAGS   += $(NVIDIA_MODPROBE_EXTRA_CFLAGS)
 
 ##### Private rules #####
 
@@ -38,7 +39,7 @@ $(SRCS_DIR)/.download_stamp:
 	$(PATCH) -d $(SRCS_DIR) -p1 < $(PATCH_FILE)
 	@touch $@
 
-$(LIB_SRCS): $(SRCS_DIR)/.download_stamp
+$(LIB_SRCS): | $(SRCS_DIR)/.download_stamp
 
 ##### Public rules #####
 
Index: git/src/nvcgo/Makefile
===================================================================
--- git.orig/src/nvcgo/Makefile
+++ git/src/nvcgo/Makefile
@@ -39,7 +39,7 @@ build: $(OBJ_NAME)
 $(OBJ_NAME): $(wildcard $(CURDIR)/*.go) $(wildcard */*.go)
 	export CGO_CFLAGS="$(CGO_CFLAGS)"; \
 	export CGO_LDFLAGS="$(CGO_LDFLAGS)"; \
-	$(GO) build -o $(@) -ldflags "-s -w" -buildmode=c-shared .
+	$(GO) build -o $(@) -ldflags "-s -w" -trimpath -buildmode=c-shared .
 
 install: $(OBJ_NAME)
 	$(INSTALL) -d -m 755 $(addprefix $(DESTDIR),$(libdir) $(includedir)/$(PKG_NAME))
